~/.bashrc
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u \[\033[01;36m\]\D{%c} \[\033[01;33m\]\w\n\[\033[01;31m\]\$\[\033[00m\] '
    alias python='python3'
    alias pip='pip3'
    alias ipython='ipython3'
    alias cdd='cd ..'

    alias pytf='source ~/tensorflow/bin/activate'
    alias pytfq='deactivate'
    

/etc/vim/vimrc
    "  --------------------------------------------------------------
    "  以下为jou增加的个人设置
    "  --------------------------------------------------------------
    set nocompatible " 关闭兼容模式，完全应用VIM所有扩展功能，不兼容Vi
    set helplang=cn " 帮助文档显示为中文
    set ruler " 显示光标位置的行号和列号
    set statusline=%F%m%r\ ASCII=\%b,HEX=\%B,%l,%c%V\ %L-%p%% " 设置命令行和状态栏
    set showfulltag " 在插入模式里，补全函数时显示函数参数
    set cc=80 " 第80列高亮
    set ai " 自动缩进
    set expandtab " 插入模式下将tab转换成空格
    set tabstop=4 " 设置tab键对应多少个空格
    set shiftwidth=4 " 设置<>或=缩进命令一次缩进为多少个空格
    set softtabstop=4 " 设置退格键可以删除一个tab对应的空格数
    set smarttab " 设置退格键可以删除一个shiftwidth宽度的空格
    set number " 设置默认在左侧显示每行的行号
    "  -------------------------------------------------------------


sublime设置

{
	"bold_folder_labels": true,
	"font_size": 11,
	"ignored_packages":
	[
		"Vintage"
	],
	"rulers":
	[
		80
	],
	"show_encoding": true,
	"tab_size": 2,
	"translate_tabs_to_spaces": true,
	"trim_trailing_white_space_on_save": true
}


sublime快捷键

[
  { "keys": ["alt+g"], "command": "toggle_setting", "args": {"setting": "line_numbers"} },
  { "keys": ["alt+f"], "command": "toggle_menu" },
  { "keys": ["alt+a"], "command": "toggle_side_bar" },
  { "keys": ["alt+d"], "command": "toggle_status_bar" },
  { "keys": ["alt+s"], "command": "toggle_tabs" },
  // { "keys": ["alt+z"], "command": "reindent" },
  { "keys": ["alt+h"], "command": "next_view" },
  { "keys": ["alt+l"], "command": "prev_view" },
]


git命令别名

[alias]
    la = log --oneline --decorate --all --graph
    st = status


.profile文件

export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
export XIM=fcitx
export XIMPROGRAM=fcitx
export XIM_SERVERS=fcitx


.inputrc

set completion-ignore-case on



tmux 配置

#解绑ctrl+b快捷键
unbind C-b

#更换前缀快捷键为ctrl+a
set -g prefix C-a

#Tmux会话选项
set -g status-keys vi

#开启鼠标模式
set -g mouse on
set -g monitor-activity on
set -g xterm-keys on

#设置默认终端配色
set -g default-terminal "screen-256color"

#自动重命名窗口名字
set -g automatic-rename on

#关闭窗口自动重新分配ID
set -g renumber-windows on

# 美化窗格栏
set -g pane-active-border-bg    green
set -g pane-active-border-fg    red

set -g display-panes-active-colour red

# 美化信息栏
set -g message-bg blue
set -g message-fg white

# 美化命令行
set -g message-command-bg cyan
set -g message-command-fg white

# black blue red green yellow white cyan magenta

# 美化标题栏
set -g status on
set -g status-position top
set -g status-fg black
set -g status-bg white
set -g status-justify centre
set -g status-justify left
set -g status-left '#[fg=black,bold][#S]'
set -g status-left-length 20
set -g status-right '#[fg=black,bold][%Y-%m-%d %H:%M]'
set -g window-status-format ' #[fg=black,bold]#I:#W '
set -g window-status-current-format ' #[fg=white,bold]* #I:#W *#[fg=black] '
set -g window-status-fg black
set -g window-status-bg white
set -g window-status-current-fg white
set -g window-status-current-bg black

#每当修改tmux.conf后 按ctrl+b r重新加载配置立即生效
bind-key r source-file ~/.tmux.conf \; display-message "Config Reloaded."
bind-key a display "秀你一脸"

#拷贝模式按键重定义
set -g mode-keys vi
#定义ctrl+y进入拷贝模式
bind-key y copy-mode
#定义使用v选取
bind-key -T copy-mode-vi 'v' send -X begin-selection
#定义使用y复制 加入到剪切板
bind-key -T copy-mode-vi 'y' send -X copy-pipe "xclip -i -sel clip > /dev/null"
#定义ctrl+b p粘贴
bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# 重定义分隔窗格快捷键
unbind '"'
unbind %
bind-key | split-window -h
bind-key - split-window -v

#重定义选择分隔窗格
bind k selectp  -U
bind j selectp  -D
bind h selectp  -L
bind l selectp  -R

# 重定义新建窗口快捷键
bind-key -n C-T new-window
#重定义窗口选择快捷键为alt + 0-9
bind-key -n M-1 select-window -t :0
bind-key -n M-2 select-window -t :1
bind-key -n M-3 select-window -t :2
bind-key -n M-4 select-window -t :3
bind-key -n M-5 select-window -t :4
bind-key -n M-6 select-window -t :5
bind-key -n M-7 select-window -t :6
bind-key -n M-8 select-window -t :7
bind-key -n M-9 select-window -t :8
bind-key -n M-0 select-window -t :9


